[{"title":"qsort analysis","excerpt":"","categories":["data structure"],"tags":[["data structure","algorithm","qsort","C","stdlib"]],"toc":true,"toc_sticky":true,"date":"2021-04-27","layout":"default","content":"<h1 id=\"qsort-함수-분석\">qsort 함수 분석</h1>\n\n<p>정렬 알고리즘을 살펴보다보면 C언어에서 라이브러리에 퀵 정렬 함수가 있다는 것을 알게 된다. 이번에 정렬 알고리즘을 배우면서 qsort 함수를 실행하고 내가 직접 구현한 퀵 정렬과 그 실행시간을 비교할 기회가 있었다.</p>\n\n<p>가장 간단한 퀵 정렬 알고리즘은 최악의 경우 \\(O(n^2)\\) 의 시간 복잡도를 갖는다. 정렬되지 않은 배열을 정렬할 때 \\(log_{2}n\\)의 재귀 단계를 가지지만, 피벗을 기준으로 파티션이 극단적으로 나뉠 때는 \\(n^2\\)의 단계를 갖는다.</p>\n\n<p>많이 쓰이는 힙 정렬은 비록 퀵 정렬보다 살짝 느리지만 이런 최악의 경우를 갖지 않고 항상 안정적인 시간 복잡도를 갖는다는 장점이 있다.</p>\n\n<p>이번 프로젝트에서 확인했던 일반적인 퀵 정렬 알고리즘의 실행시간은 다음과 같다. 데이터 개수는 5만개로 하였다.</p>\n\n<ul>\n <li>정렬되지 않은 배열(일반적인 경우)</li>\n</ul>\n\n<table>\n <thead>\n <tr>\n <th>시행</th>\n <th>시간</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td>0.018301</td>\n </tr>\n <tr>\n <td>2</td>\n <td>0.024061</td>\n </tr>\n <tr>\n <td>3</td>\n <td>0.023780</td>\n </tr>\n <tr>\n <td>4</td>\n <td>0.021898</td>\n </tr>\n <tr>\n <td>5</td>\n <td>0.021349</td>\n </tr>\n </tbody>\n</table>\n\n<ul>\n <li>정렬된 배열(최악의 경우)</li>\n</ul>\n\n<table>\n <thead>\n <tr>\n <th>시행</th>\n <th>시간</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td>6.159308</td>\n </tr>\n <tr>\n <td>2</td>\n <td>6.295298</td>\n </tr>\n <tr>\n <td>3</td>\n <td>6.714806</td>\n </tr>\n <tr>\n <td>4</td>\n <td>6.275795</td>\n </tr>\n <tr>\n <td>5</td>\n <td>8.014508</td>\n </tr>\n </tbody>\n</table>\n\n<p>표에서 보다시피 입력으로 이미 정렬된 배열이 들어왔을때 퀵 정렬은 일반적인 경우에 비해 말도 안되는 성능 하락을 보인다. 퀵 정렬은 필연적으로 이런 최악의 경우를 피하기 위해 알고리즘을 적절히 편집할 필요가 있다.</p>\n\n<p>C언어 라이브러리 stdlib에 있는 qsort는 놀랍게도 이런 정렬된 배열을 입력으로 주었을 때도 수행시간이 증가하지 않았을 뿐만 아니라, 오히려 줄어들기까지 했다.</p>\n\n<ul>\n <li>정렬되지 않은 배열을 qsort에 넣었을 때</li>\n</ul>\n\n<table>\n <thead>\n <tr>\n <th>시행</th>\n <th>시간</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td>0.002869</td>\n </tr>\n <tr>\n <td>2</td>\n <td>0.002074</td>\n </tr>\n <tr>\n <td>3</td>\n <td>0.002466</td>\n </tr>\n <tr>\n <td>4</td>\n <td>0.002613</td>\n </tr>\n <tr>\n <td>5</td>\n <td>0.002080</td>\n </tr>\n </tbody>\n</table>\n\n<p>정렬되지 않은 일반적인 경우에서의 수행시간보다 열 배는 적은 시간을 사용했다.</p>\n\n<p>어리지만 그래도 코드를 쓰는 사람으로서 이를 능가하지는 못할 망정 따라잡고 싶은 마음이 들었다. 생각해보면 이미 정렬된 데이터를 다시 정렬하고자 할 때 수행시간이 늘어나는 것 자체가 직관적으로 이해되지 않는다. 이미 정렬되어 있다면 데이터 요소의 비교는 어쩔 수 없다고 해도 그 이동은 확연히 줄어들 것이라고 여기기 마련이다. 그렇다면 퀵 정렬에서 성능을 향상시킬 수 있는 방법이 어떤 것이 있을까? 퀵 정렬에서 피벗으로 범위의 중간값을 선택하거나, 배열을 무작위로 섞은 뒤 정렬하는 방법도 있을 것이다. 또한 스택 오버플로우의 위험을 갖는 재귀호출이 아닌 스택을 사용하는 방법도 있다. 이 세가지 방법을 모두 구현해보았다.</p>\n\n<p>먼저 입력받은 배열을 뒤섞고 정렬하는 퀵 정렬의 수행시간을 보았다.</p>\n\n<table>\n <thead>\n <tr>\n <th>시행</th>\n <th>시간</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td>0.030819</td>\n </tr>\n <tr>\n <td>2</td>\n <td>0.027320</td>\n </tr>\n <tr>\n <td>3</td>\n <td>0.030205</td>\n </tr>\n <tr>\n <td>4</td>\n <td>0.027480</td>\n </tr>\n <tr>\n <td>5</td>\n <td>0.029770</td>\n </tr>\n </tbody>\n</table>\n\n<p>의에서 보였던 최악의 경우는 벗어났지만 수행시간이 늘어났다. 데이터의 셔플에서 수행시간을 까먹은 것으로 보인다. 최종적인 시간 복잡도는 \\(O(nlog_{2}n)\\)에서 벗어나지 않지만, \\(O(n)\\)을 갖는</p>\n\n<p>스택을 사용하는 퀵 정렬을 구현하고 피벗을 범위의 중간 값으로 선택하는 함수의 수행시간은 다음과 같다.</p>\n\n<ul>\n <li>스택 + 중간 요소가 피벗</li>\n</ul>\n\n<table>\n <thead>\n <tr>\n <th>시행</th>\n <th>시간</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>1</td>\n <td>0.002869</td>\n </tr>\n <tr>\n <td>2</td>\n <td>0.002074</td>\n </tr>\n <tr>\n <td>3</td>\n <td>0.002466</td>\n </tr>\n <tr>\n <td>4</td>\n <td>0.002613</td>\n </tr>\n <tr>\n <td>5</td>\n <td>0.002080</td>\n </tr>\n </tbody>\n</table>\n","dir":"/post/data_structure/","name":"2021-04-27-qsort.md","path":"post/data_structure/2021-04-27-qsort.md","url":"/post/data_structure/2021-04-27-qsort.html"},{"permalink":"//","layout":"default","title":"altair823","content":"# altair823\n\n![CI](https://github.com/rundocs/jekyll-rtd-theme/workflows/CI/badge.svg?branch=develop)\n![jsDelivr](https://data.jsdelivr.com/v1/package/gh/rundocs/jekyll-rtd-theme/badge)\n\n그냥 이것저것 올리는 블로그\n\n## 소개\n\n춘천고등학교 인문계열 졸업\n\n중앙대학교 심리학과 재학중\n\n중앙대학교 컴퓨터 공학 복수전공 이수중\n\n## Blog theme\n\n[jekyll-rtd-theme](https://github.com/rundocs/jekyll-rtd-theme)\n\n## The license\n\nThe theme is available as open source under the terms of the MIT License\n","dir":"/","name":"README.md","path":"README.md","url":"/"},{"sort":1,"title":"라즈베리파이에 관한 이야기","date":"2021-02-27 17:07:53 +0900","categories":["라즈베리파이"],"layout":"default","content":"<h2 id=\"1-컴퓨터\">1. 컴퓨터</h2>\n\n<p>시간이 흐르면서 컴퓨터의 성능은 비약적으로 발전했다. 때문에 비록 라즈베리파이가 평소 우리가 자주 접하는 컴퓨터의 성능에 턱없이 모자른 성능으로 보일지 모르지만 삼사십년 전에 라즈베리파이 만한 성능의 컴퓨터는 몇 백만원을 호가했다. 심지어 더욱 거슬러 올라간다면 집채만했던 컴퓨터가 지금 내 손바닥에 올라와 있는 라즈베리파이보다 성능이 안좋았던 시절도 있었다. 그 당시 대부분의 컴퓨터는 너무나 성능이 좋지 않아 지금 쓰는 고수준 프로그래밍 언어(그래봤자 현대에는 저수준이라고 까이는 C 같은 언어들)로 프로그램을 작성 할 수도 없었다. 더욱 하드웨어 친화적인, 따라서 더욱 컴퓨터의 부담이 적은 어셈블리어나 기계어로 작성했다.</p>\n\n<p>그런 컴퓨터를 싣고 아폴로 11호는 달에 착륙했으며, 우주비행사가 내린 명령을 다른 계산을 하는 도중에 실시간으로 판단하여 위험한 명령이면 다시 생각해보라고 알리기까지 했다. 우주왕복선의 컴퓨터는 더욱 발전하여 우주비행사가 해야 할 일은 고작 착륙할 때 필요한 바퀴를 내리는 버튼을 누르는 일 뿐이었다. 이조차 우주비행사의 심리적인 책임감을 위해 남겨뒀을뿐 안전과 효율을 고려한다면 오히려 컴퓨터가 처음부터 끝까지 모든 일을 하는 것이 더 나은 일이었다.</p>\n\n<p> </p>\n\n<figure id=\"attachment_84\" aria-describedby=\"caption-attachment-84\" style=\"width: 640px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" class=\"size-full wp-image-84\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/95789985cf7e3b3238aab7da62b221fb08437608ae5baa3ee3dbbe078bb09f3fe3bb7034f39c2b4d4c35892472522bf0e52c9520b2d4ef9eda80f02a9d570675e9cac2c5841d35e40a6dc93688bea705f9cb6f4b56adf1fe5c1eb33752aa6683-4.jpeg\" alt=\"\" width=\"640\" height=\"783\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/95789985cf7e3b3238aab7da62b221fb08437608ae5baa3ee3dbbe078bb09f3fe3bb7034f39c2b4d4c35892472522bf0e52c9520b2d4ef9eda80f02a9d570675e9cac2c5841d35e40a6dc93688bea705f9cb6f4b56adf1fe5c1eb33752aa6683-4.jpeg 640w, https://altair823.com/wp-content/uploads/2021/02/95789985cf7e3b3238aab7da62b221fb08437608ae5baa3ee3dbbe078bb09f3fe3bb7034f39c2b4d4c35892472522bf0e52c9520b2d4ef9eda80f02a9d570675e9cac2c5841d35e40a6dc93688bea705f9cb6f4b56adf1fe5c1eb33752aa6683-4-245x300.jpeg 245w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" /><figcaption id=\"caption-attachment-84\" class=\"wp-caption-text\">지금은 사진 한 장 겨우 저장할 크기지만 정말로 큰 크기였던 적이 있었다.</figcaption></figure>\n\n<p>분명 지금 있다면 윈도우조차 설치되지 않을 성능의 컴퓨터들이지만 분명 다양하고 때론 중요한 일을 했던 컴퓨터들이 있었다. 컴퓨터를 단지 게임기나 문서 편집기 이상의 무언가로 생각하는 사람들이라면 컴퓨터에 얼마나 가파른 성능 향상이 있었는지, 그리고 그에 따라 우리가 얼마나 더 많은 일들을 컴퓨터로 해낼 수 있게 되었는지, 그럼에도 불구하고 우리가 컴퓨터에게 얼마나 간단한 일을 시키느라 그 성능을 낭비하고 있는지 깨닫는다면 분명 짜릿한 전율을 느낄 것이다.</p>\n\n<p>그리고 그런 사람들은 생각한다. 우리가 단지 성능에 관해서 사치를 부리지만 않는다면. 정말 딱 필요한 정도의 성능을 가진 컴퓨터를 만든다면 어떻게 될까? 라즈베리파이는 그런 사람들에게 주어진 선물같은 도구다.</p>\n\n<h2 id=\"2-라즈베리파이란\">2. 라즈베리파이란?</h2>\n\n<p>라즈베리파이의 역사나 자잘한 성능표를 읊고 싶지는 않다. 중요한 것은 인터넷, 서버, 운영체제 등 컴퓨터와 관련된 많은 것들을 배우는 것에 그치지 않고 특정 용도로 지속적으로 사용하는데에도 부족함이 없다는 것이다. 보통의 데스크탑처럼 웹서핑이나 문서작업에 쓸 수도 있다. 운영체제를 마이크로SD 카드에 저장하기 때문에 입출력이 조금 느릴 수는 있으나 뭐 어떠랴. 4K모니터를 두개나 달 수도 있는데. MATLAB을 굴리거나 저사양이지만 마인크래프트를 돌릴 수도 있다. 파이썬, C, 스크래치 같은 프로그래밍 언어로 프로젝트를 할 수도 있다. GPIO에 아누이노나 센서들을 연결해 수 없이 많은 감지기들을 만들 수도 있으며, 카메라를 달아 얼굴 인식 프로그램을 만들어 사람을 볼때마다 인사를 하게 할 수도 있다. 아니면 필자처럼 무난하게 NAS나 블로그 서버를 돌릴 수도 있다. 정말 말 그대로 현대 컴퓨터가 하는 일은 뭐든 할 수 있다.</p>\n\n<p>그러나 우리 마음에 가장 와닫는 것은 바로 그것의 가격이다. 모델의 종류마다 다르지만 가장 싼 라즈베리파이는 5달러이며 가장 사양이 높은 최신 모델은 75달러까지 있다. 일반 사용자용 컴퓨터 못지않은 굉장한 범용성을 갖춘 컴퓨터가 고작 몇 만 원이라니, 얼마나 놀라운 일인가? 몇 십 년 전만 해도 몇 백은 줘야 얻을 수 있었던 성능의 컴퓨팅 성능을 우리는 단돈 오 만원에 손에 쥘 수 있게 된 것이다. 말 그대로 손에!</p>\n\n<figure id=\"attachment_85\" aria-describedby=\"caption-attachment-85\" style=\"width: 643px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" class=\"size-full wp-image-85\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-11.51.03.png\" alt=\"\" width=\"643\" height=\"658\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-11.51.03.png 643w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-11.51.03-293x300.png 293w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" /><figcaption id=\"caption-attachment-85\" class=\"wp-caption-text\">라즈베리파이 재단 공식 홈페이지의 사진. 정말 손바닥만하다.</figcaption></figure>\n\n<p>필자가 라즈베리파이를 구매하고 사용한 지난 몇 달은 “아니 이게 돼?”의 연속이었다. 이 글에서는 라즈베리파이가 얼마나 넓은 범용성을 가지고 있는지, 그게 얼마나 놀라운 일인지 간략하게 소개할 것이다.</p>\n\n<h2 id=\"3-내-라즈베리파이\">3. 내 라즈베리파이</h2>\n\n<p>라즈베리파이 4B+에 개인용 NAS와 <a href=\"https://altair823.com\">블로그</a> 서버를 올려 사용중이다. 트랜스미션을 설치해서 밤새 토렌트 파일을 받아놓기도 한다. 이걸로 많은 프로젝트를 했지만 계속 유지할만한 것들은 위에 세 개 정도였다.</p>\n\n<h3 id=\"1-nas\">1) NAS</h3>\n\n<p>처음 나스를 구성하게 된 이유는 군대 때문이었다. 군 복무를 하며 프로그래밍 프로젝트를 할 시간이 생겼다. 비록 짧은 시간들이었지만 그래도 코드들을 백업할 필요성을 느꼈다. 깃허브에 커밋하거나 드롭박스에 파일 채로 업로드하는 방법도 있었고 실제로도 그렇게 했다. 그러다가 나스를 알게되었고 또한 나스를 구성하는 가장 저렴한 방법이 라즈베리파이라는 것도 알게되었다. 후에 여러가지로 활용도 할 수 있고 가장 중요한 나스로 사용할 수 있었다. 휴가에 맞춰 주문하여 받았다. OMV를 설치하여 나스로 사용하였고 현재까지도 굉장히 만족하며 사용중이다.</p>\n\n<p>파일의 백업과 저장공간의 확장은 단지 외장 저장장치를 사용하면 된다. 어떤 면에서는 더 이해하기 쉽고 편할 수도 있다. 나도 외장 HDD와 나스 사이에서 수없이 고민했던 기억이 있다. 시놀로지나 아수스토어와 같은 비싼 기성품 나스를 사용하지는 않았기에 가성비 측면은 크게 차이가 없었지만 안정적인 사용과 높은 수준의 보안을 위해서는 외장 하드가 더 나은 선택이었다. 인터넷이 끊어지면 사용 불가능한 나스와 달리 외장하드는 케이블이 연결되어 있다면 언제나 연결과 속도를 보장한다. 게다가 외부 인터넷에 연결하여 사용하는 나스의 특성상 파일 보안의 측면에서 분명 안심할 수 없는 부분이 있다. 조금 불편하긴 할테지만 어느 정도 이동성도 갖추고 있었기 때문에 밖에서도 파일에 접근 할 수 있다는 나스의 장점도 일부 희석되었다.</p>\n\n<p>그런 많은 고민에도 불구하고 나는 나스를 선택했다. 가장 직접적인 이유는 내가 윈도우와 맥을 번갈아가며, 때로는 동시에 사용한다는 사실이다. 따라서 윈도우의 NTFS포멧이나 애플에 APFS포멧에 구애받지 않고 두 운영체제 모두에서 접근가능한 장치가 필요했다. 물론 특정 프로그램을 설치하고 EXT4나 NTFS 그대로 사용하더라도 가능했겠지만 포트가 부족한 맥북이나 아예 포트가 존재하지 않는 아이폰까지 생각하면 외장하드는 백업 용도로만 사용할 수 밖에 없는 반쪽짜리 저장장치였다.</p>\n\n<p>당시 내가 군인 신분이었던 것도 한 몫했다. 부대에서 작성한 코드들을 백업하려면 외장 하드를 부대 안으로 반입해야하지만 규정상 어려운 일이었다. 모든 부대원들이 공용으로 사용하는 컴퓨터에 내인 하드를 꽂는 것도 썩 내키는 일이 아니었다. 그랬기 때문에 더욱 인터넷으로 접근 가능한 저장 공간이 필요했으며 라즈베리파이로 만든 나스는 그 필요를 충족할 뿐만 아니라 앞으로 진행할지도 모르는 많은 프로젝트들을 생각했을 때 최고의 선택이었다.</p>\n\n<p><img class=\"aligncenter\" src=\"https://altair823.com/wp-content/uploads/2021/02/IMG_2295-scaled.jpg\" /></p>\n\n<p>몇 번의 시행착오 끝에 완성하여 지금까지 알차게 사용하고 있는 나스는 하드를 두 개 달아 하나는 맥북 타임머신 백업용으로, 하나는 윈도우와 맥에 있는 프로젝트 백업과 입출력이 상대적으로 느려도 별로 상관없는 대용량 파일을 저장하는데 쓰고 있다. 실시간 영상 편집과 같은 대용량 파일의 높은 입출력 속도를 요구하는 작업이 아니라면 개인의 일반적인 업무에는 정말 차고 넘치는 성능을 제공한다.</p>\n\n<p>개인적으로는 미니 ITX 컴퓨터로 바꾸고 나서는 3.5인치 하드를 컴퓨터에 설치할 수 없어서 난감했는데 그때 남은 하드를 알차게 활용할 수 있어서 만족하는 중이다.</p>\n\n<h3 id=\"2-블로그-서버\">2) 블로그 서버</h3>\n\n<p>아파치2와 php, 워드프레스를 라즈베리파이에 올려서 블로그 서버로 사용 중이다. 자세한 방법이나 내가 겪었던 시행착오는 나중에 따로 쓰기로 하고 이번에는 소감만 간단히 말한다.</p>\n\n<p>첫 번째로 느낀 것은 모든 것이 완성되어 정상적으로 돌아갈 수 있기까지 비록 겉핥기 수준이지만 내가 정말 많은 것을 배웠다는 것이다. 짧은 지식이라 굳이 배운 것을 자랑하고 싶지는 않지만 완성하기 전의 나와 후의 나는 분명 다르다고 자신한다. 외부에서 페이지에 접속할 수 있도록 하는 것부터 구글에서 구매한 도메인에 사이트를 연결하여 주소창에 도메인을 쳐 접속할 수 있도록 하는 것까지, 일어난 문제를 해결해 갈 때마다 짜릿한 성취감과 더불어 그 부분에 대한 나름 깊은 이해와 통찰을 얻을 수 있었다. 블로그의 내용과는 별개로 목표로 하던 것을 많은 시행착오를 거쳐 결국 완성시켰다는 사실이 내게 정말 큰 기쁨을 주었다.</p>\n\n<figure id=\"attachment_94\" aria-describedby=\"caption-attachment-94\" style=\"width: 763px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" class=\"wp-image-94 size-full\" src=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-28-오전-11.53.52.png\" alt=\"\" width=\"763\" height=\"509\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-28-오전-11.53.52.png 763w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-28-오전-11.53.52-300x200.png 300w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" /><figcaption id=\"caption-attachment-94\" class=\"wp-caption-text\">감격의 첫 화면. 이후 mariadb와 워드프레스를 설치했다.</figcaption></figure>\n\n<p>하지만 치명적인 오류를 마주할 때마다 왜 사람들이 이런 설치형 개인 블로그를 사용하지 않고 네이버나 티스토리에서 운영하는 서비스형 블로그를 사용하는지 뼈저리게 알게되었다. 만약 내가 블로그의 완성과 운영이 목표가 아니라 그 안에 담을 내용을 생각했고 서버의 안정성을 원했다면 절대 라즈베리파이에 설치하는 방식을 선택하지 않았을 것이다. 서버는 불안정하고, 부족한 기능을 추가하고 유지보수하는 과정에서 정작 블로그에 담을 내용에는 집중하지 못하는 경우가 생긴다.</p>\n\n<p>페이지에 글을 남길 수 있도록 하는데까지 이틀은 족히 걸렸고, 구글 검색에 뜨게 하는데까지 나흘이 걸렸다. 그럼에도 불구하고 아직 작동하지 않는 많은 기능들이 나를 불편하게 한다. 이런 상황속에서 글을 쓰는 일에 집중하는 것은 불가능한 것 같다. 짧은 내 지식으로는 이런 종류의 서버를 완벽하게 만들지 못하는 바, 정말 질 좋은 글들을 쓰는데 집중하려면 차라리 다른 서비스형 블로그를 이용할 것이라는 결론에 도달했다. 정말로 내 목표가 사이트의 완성이 아니었다면 티스토리에 블로그를 만들었거나 아예 만들지 않았을 것이다.</p>\n\n<h3 id=\"3-트랜스미션\">3) 트랜스미션</h3>\n\n<p>트랜스미션은 토렌트 파일을 다운받는 프로그램이다. 가끔 용량이 무지막지한 토렌트 파일을 받아야 할 때가 있었다. 가는 명주실 같은 다운 속도를 보여주는 파일도 있다. 낮에는 도대체가 다운이 안되다가 새벽이 되어서야 피어가 나타나 다운이 시작되는 경우도 있었다. 쓸데없이 컴퓨터 리소스를 차지하여 게임이나 인터넷을 느리게 만든다. 25ms에서 놀던 핑이 단숨이 300ms으로 튀기도 한다. 단지 호기심에 설치해봤지만 지금 와서는 나름 만족하며 사용중인 기능이 되었다.</p>\n\n<figure id=\"attachment_96\" aria-describedby=\"caption-attachment-96\" style=\"width: 1086px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" class=\"wp-image-96 size-full\" src=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-28-오후-12.02.05.png\" alt=\"\" width=\"1086\" height=\"791\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-28-오후-12.02.05.png 1086w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-28-오후-12.02.05-300x219.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-28-오후-12.02.05-1024x746.png 1024w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-28-오후-12.02.05-768x559.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /><figcaption id=\"caption-attachment-96\" class=\"wp-caption-text\">트랜스미션의 웹 페이지 화면</figcaption></figure>\n\n<h2 id=\"4-결론\">4. 결론</h2>\n\n<p>라즈베리파이의 매력은 결핍이라고 생각한다. 분명 우리 책상 위에는 놀라운 성능의 컴퓨터가 올려져 있다. 게임도 신나게 돌리면서 유튜브도 동시에 켜 놓을 수 있다. 2021년 초 지금 개인 컴퓨터 시장은 놀라운 변화를 맞이하고 있다. 메인스트림 PC는 4코어에서 6코어로 훌쩍 뛰었고, AMD는 드디어 게이밍 성능에서조차 인텔을 따라잡으며 다시금 과거의 영광을 되찾으려 하고 있다.  엔비디아는 일반 사용자용으로서는 전례없는 성능향상을 이룬 신세대 그래픽카드를 출시했다. 이런 컴퓨터들로 무언가를 못한다는 것은 상상하기 어렵다.</p>\n\n<p>하지만 라즈베리파이는 ‘고작 이게?’라는 놀라움을 끊임없이 일으킨다. 핸드폰 충전기에 연결된 손바닥만한 초록 기판의 부족한 성능을 짜내어 프로젝트를 진행하다보면 정말 컴퓨터가 무엇인지 놀랍도록 빠르게 배울 수 있을 것이다.</p>\n","dir":"/post/raspberrypi/","name":"2021-02-27-first.md","path":"post/raspberrypi/2021-02-27-first.md","url":"/post/raspberrypi/2021-02-27-first.html"},{"sort":1,"permalink":"/post/","layout":"default","title":"컴퓨터","content":"<h1 id=\"컴퓨터\">컴퓨터</h1>\n\n<ul>\n <li><a href=\"/post/data_structure/\">자료구조</a>\n <ul>\n <li><a href=\"/post/data_structure/2021-04-27-qsort.html\">qsort analysis</a></li>\n </ul>\n </li>\n <li><a href=\"/post/raspberrypi/\">라즈베리파이</a>\n <ul>\n <li><a href=\"/post/raspberrypi/2021-02-27-first.html\">라즈베리파이에 관한 이야기</a></li>\n <li><a href=\"/post/raspberrypi/2021-02-27-madeNAS.html\">라즈베리파이에 OMV로 NAS만들기</a></li>\n <li><a href=\"/post/raspberrypi/2021-03-02-transmission_error.html\">트랜스미션 “Permission denied…” 오류 해결하기</a></li>\n <li><a href=\"/post/raspberrypi/2021-03-02-OMV(1).html\">OMV를 사용하며 겪었던 시행착오들 (1)</a></li>\n <li><a href=\"/post/raspberrypi/2021-03-02-OMV(2).html\">OMV를 사용하며 겪었던 시행착오들 (2)</a></li>\n </ul>\n </li>\n</ul>\n","dir":"/post/","name":"README.md","path":"post/README.md","url":"/post/"},{"sort":1,"permalink":"/post/data_structure/","layout":"default","title":"자료구조","content":"<h1 id=\"자료구조\">자료구조</h1>\n\n<ul>\n <li><a href=\"/post/data_structure/2021-04-27-qsort.html\">qsort analysis</a></li>\n</ul>\n","dir":"/post/data_structure/","name":"README.md","path":"post/data_structure/README.md","url":"/post/data_structure/"},{"sort":2,"title":"라즈베리파이에 OMV로 NAS만들기","date":"2021-02-27 10:56:01 +0900","author":"altair823","categories":["NAS"],"layout":"default","content":"<h2 id=\"1-omvopenmediavault의-이해\">1. OMV(OpenMediaVault)의 이해</h2>\n\n<p>라즈베리파이는 강력한 컴퓨터다. 물론 우리가 맨 처음 떠올리는 컴퓨터의 이미지에는 미치지 못하지만 어떤 일들은 다른 강력한 컴퓨터보다 더 효율적으로 수행할 수 있다. 라즈베리파이의 기본적인 정보는 다른 글에서 다루기로 하고 이번 글에서는 라즈베리파이에 OMV(OpenMediaVault)로 NAS를 만드는 법을 다루겠다.</p>\n\n<p>OMV는 라즈베리파이를 포함한 다양한 컴퓨터를 NAS로 사용할 수 있도록 해주는 프로그램이다. 오드로이드나 라떼판다와 같은 싱글보드 컴퓨터들도 충분히, 어쩌면 더욱 강력한 성능의 NAS로서 기능할 수 있다. 그러나 라즈베리파이 만큼 다양한 기능을 제공하고 많은 레퍼런스가 존재하는 싱글보드 컴퓨터는 아직 존재하지 않는다. 따라서 전문적인 용도가 아니라면 (때로는 전문적인 용도로도) 충분히 강력하다.</p>\n\n<p>이 글에서 OMV의 자잘한 설정은 다루지 않는다. 가장 기본적이고 중요한 설정만 다룰 예정이다.</p>\n\n<h2 id=\"2-omv설치\">2. OMV설치</h2>\n\n<p>뭐든 가장 정확하고 깔끔하게 설치하는 법은 공식 홈페이지에서 제공하는 설명을 읽는 것이다. 아래는 OMV 공식 홈페이지의 설치 메뉴얼이다.</p>\n\n<p><a href=\"https://wiki.omv-extras.org/doku.php?id=installing_omv5_raspberry_pi\">https://wiki.omv-extras.org/doku.php?id=installing_omv5_raspberry_pi</a></p>\n\n<p>OMV4까지는 특정 이미지를 직접 sd카드에 플래시 할 수 있었으나 어차피 같은 데비안 리눅스 기반으로 터미널에서 설치 할 수 있는 패키지라 현재는 이미지를 제공하지 않는다. 따라서 콘솔로 설치해야 한다.</p>\n\n<p>기본적으로 준비해야 할 것들이 있다. 유선으로 인터넷에 연결된 라즈베리파이와 라즈베리파이 운영체제인 라즈비안이 설치된 마이크로 sd카드가 필요하다. 자질구레한 설정과 플러그인을 설치해도 4기가를 넘지 않으나 개인적으로는 16기가 마이크로 sd카드가 제일 가성비 좋다고 생각한다.</p>\n\n<p>라즈베리파이와 ssh연결을 수립하는 것은 다루지 않겠다. 라즈베리파이의 최신화를 끝냈다면 터미널에 다음을 입력한다.</p>\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"godzilla\">wget -O - https://github.com/OpenMediaVault-Plugin-Developers/installScript/raw/master/install | sudo bash</pre>  \n\n<p>오랜 시간이 걸리고 라즈베리파이가 재부팅 될 것이다. 그동안 절대 ssh 터미널화면을 끄지 않길 바란다. 이는 설치과정을 강제로 중단시킨다. 이후 라즈베리파이의 IP주소로 접속하면 OMV5의 웹 화면이 나온다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone wp-image-51\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.40.17-1.png\" alt=\"\" width=\"666\" height=\"334\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.40.17-1.png 1920w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.40.17-1-300x151.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.40.17-1-1024x514.png 1024w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.40.17-1-768x386.png 768w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.40.17-1-1536x771.png 1536w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.40.17-1-1200x603.png 1200w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" /></p>\n\n<p>기본 아이디와 패스워드는 admin과 openmediavault이다. 입력하여 접속하면 다음과 같은 화면이 나온다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-52\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.43.18.png\" alt=\"\" width=\"1914\" height=\"967\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.43.18.png 1914w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.43.18-300x152.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.43.18-1024x517.png 1024w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.43.18-768x388.png 768w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.43.18-1536x776.png 1536w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-8.43.18-1200x606.png 1200w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>필자는 이미 필요한 세팅을 끝냈기 때문에 FTP와 SMB에 초록불이 들어와있다. 하지만 맨 처음 설치한 사람이라면 불이 들어와있지 않을 것이다. 가장 먼저 해야할 것은 관리자 계정의 비밀번호를 바꾸는 것이다. 좌측 메뉴에 일반 설정에서 웹 관리자 암호 탭을 선택한다.<img loading=\"lazy\" class=\"alignnone size-full wp-image-54\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.10.39.png\" alt=\"\" width=\"1919\" height=\"965\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.10.39.png 1919w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.10.39-300x151.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.10.39-1024x515.png 1024w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.10.39-768x386.png 768w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.10.39-1536x772.png 1536w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.10.39-1200x603.png 1200w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>보안을 위해 반드시 새로운 암호로 변경하는 것이 좋다.</p>\n\n<h2 id=\"3-저장장치-설정\">3. 저장장치 설정</h2>\n\n<p>이후 필요한 저장 장치를 라즈베리파이에 연결한다. 필자는 4테라 하드와 1테라 하드를 하드 도킹 스테이션에 USB 3.0으로 연결해 사용중이다.<img loading=\"lazy\" class=\"alignnone size-full wp-image-56\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/IMG_2295-scaled.jpg\" alt=\"\" width=\"1920\" height=\"2560\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/IMG_2295-scaled.jpg 1920w, https://altair823.com/wp-content/uploads/2021/02/IMG_2295-225x300.jpg 225w, https://altair823.com/wp-content/uploads/2021/02/IMG_2295-768x1024.jpg 768w, https://altair823.com/wp-content/uploads/2021/02/IMG_2295-1152x1536.jpg 1152w, https://altair823.com/wp-content/uploads/2021/02/IMG_2295-1536x2048.jpg 1536w, https://altair823.com/wp-content/uploads/2021/02/IMG_2295-1200x1600.jpg 1200w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>장치를 연결했다면 왼쪽 사이드바에서 디스크를 클릭한다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-57\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.20.23.png\" alt=\"\" width=\"806\" height=\"672\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.20.23.png 806w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.20.23-300x250.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.20.23-768x640.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" /></p>\n\n<p>필자는 하드 두개와 2.5인치 SSD하나, 128기가 USB를 사용하고 있다. 위에서부터 씨게이트 하드, 샌디스크 SSD, 웨스턴 디지털 하드, 샌디스크 USB가 인식된 상태다. 만약 아무것도 연결하지 않았거나 어떤 이유로 인식이 불가능하다면 마이크로 SD카드만 보일 것이다. 정상적으로 인식되었다면 해당 장치가 저 리스트 중에 있을 것이다.</p>\n\n<p>OMV는 많은 종류의 파일 시스템을 인식할 수 있다. 거기엔 윈도우의 NTFS와 리눅스의 EXT4, ZFS 같은 것들도 포함된다. 해당 파일 시스템이라면 분명 어느 부분 그대로 사용 가능하지만 이에대한 내용은 다른 글에 소개하겠다.</p>\n\n<p>OMV의 웹 페이지에서 변경된 설정이 감지되면 이를 적용할 것인지 물어보는 알림이 위에 뜬다. 안정성을 위해 해당 알림이 뜬다면 바로바로 변경사항을 적용하기 바란다.</p>\n\n<p>맨 처음 장치를 연결했다면 지우기를 눌러 장치의 모든 내용을 삭제한다. 마이크로 SD카드는 절대 건드리지 않는다. 완료되었다면 사이드 바에 파일 시스템을 클릭한다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-59\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.27.26.png\" alt=\"\" width=\"1296\" height=\"517\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.27.26.png 1296w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.27.26-300x120.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.27.26-1024x408.png 1024w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.27.26-768x306.png 768w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.27.26-1200x479.png 1200w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>필자는 이미 파일 시스템들이 존재한다. 이중 boot와 rootfs는 라즈베리파이의 SD카드에 만들어진 파일들이니 이미 존재할 것이고 절대 건드리지 않는다. 전 단계에서 지우기를 눌렀다면 이 두 개 외에는 어떤 파일 시스템도 존재하지 않을 것이다. 왼쪽 위에 생성을 눌러 파일 시스템을 생성한다.<img loading=\"lazy\" class=\"alignnone size-full wp-image-60\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.30.25.png\" alt=\"\" width=\"805\" height=\"567\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.30.25.png 805w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.30.25-300x211.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.30.25-768x541.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" /></p>\n\n<p>장치를 선택하고 레이블을 입력한다. 파일 시스템의 포맷은 BTRFS와 EXT4중에 하나를 고르는 것이 마음 편하다. 나머지 파일 시스템은 너무 오래되었거나, 모바일에 최적화되어 있거나, 일반사용자에게는 의미없는 기능을 위해 만들어진 것이다. 필자는 모든 하드를 EXT4로 포맷하여 사용중이며 충분히 안정적인 성능을 보여주고 있다.</p>\n\n<p>파일 시스템을 생성했다면 이제 정상적으로 OMV에서 장치로 접근 가능하다는 것이다. 이 부분에서 라즈베리파이에 자동으로 마운트 되는데, GUI를 포함한 라즈비안을 설치한 사람은 라즈베리파이 바탕화면에서 해당 장치를 찾을 수 없어서 의아할 것이다.<img loading=\"lazy\" class=\"alignnone wp-image-61 size-full\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/image60-e1614386485406.png\" alt=\"\" width=\"1600\" height=\"868\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/image60-e1614386485406.png 1600w, https://altair823.com/wp-content/uploads/2021/02/image60-e1614386485406-300x163.png 300w, https://altair823.com/wp-content/uploads/2021/02/image60-e1614386485406-1024x556.png 1024w, https://altair823.com/wp-content/uploads/2021/02/image60-e1614386485406-768x417.png 768w, https://altair823.com/wp-content/uploads/2021/02/image60-e1614386485406-1536x833.png 1536w, https://altair823.com/wp-content/uploads/2021/02/image60-e1614386485406-1200x651.png 1200w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>장치는 /srv 경로에 존재한다. 과거에는 레이블을 사용하여 폴더를 생성했지만 지금은 UUID를 폴더명으로 사용한다.</p>\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"godzilla\">/srv/dev-disk-by-uuid-03c2bd42-99e7-449f-85cc-************</pre>  \n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">test\n</pre>  \n\n<p> </p>\n\n<p>이런 형식으로 폴더가 생성되어 있을 것이다. 트랜스미션의 설정과 같은 이유로 필요하다면 해당 파일 시스템의 UUID를 알아놓기 바란다.</p>\n\n<p>다시 OMV웹 페이지로 돌아간다. 사이드바에서 사용자를 클릭한다. OMV의 모든 폴더는 PI계정을 제외하면 권한을 준 사용자만 접근이 가능하며 반드시 필요한 상황이 아니라면 관리자 계정이 아닌 특정 사용자를 따로 생성하여 접근하는 것이 보안상 필요하다.<img loading=\"lazy\" class=\"alignnone size-full wp-image-62\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.48.37.png\" alt=\"\" width=\"589\" height=\"586\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.48.37.png 589w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.48.37-300x298.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.48.37-150x150.png 150w\" sizes=\"(max-width: 589px) 85vw, 589px\" /></p>\n\n<p>왼쪽 위에 추가를 눌러 사용자를 추가하자. 필요한 경우가 아니라면 그룹이나 공개 키는 따로 수정하지 않아도 될 것이다.</p>\n\n<p>사용자를 추가했다면 다시 사이드바에서 공유폴더를 선택한다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-63\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.50.08.png\" alt=\"\" width=\"847\" height=\"580\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.50.08.png 847w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.50.08-300x205.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.50.08-768x526.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>이 또한 추가를 눌러 필요한 정보를 입력해준다. 파일 시스템의 레이블과 공유폴더의 이름은 같을 필요 없다. 하나의 파일시스템에 용도에 따라 여러개의 공유폴더가 존재해도 된다. 공유폴더 이름과 공유폴더가 존재할 장치를 선택하고 저장한다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-64\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.52.08.png\" alt=\"\" width=\"880\" height=\"325\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.52.08.png 880w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.52.08-300x111.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.52.08-768x284.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>필자는 이미 두개의 공유폴더를 사용중이다. 만약 공유폴더를 생성했다면 위 그림처럼 새로운 공유폴더가 보일 것이다. 이를 선택하고 위에 권한을 누른다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-65\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.53.12.png\" alt=\"\" width=\"666\" height=\"444\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.53.12.png 666w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-9.53.12-300x200.png 300w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" /></p>\n\n<p>필자의 공유폴더에 설정된 권한이다. 맨 위에 아이디는 필자가 쓰는 계정, 그 아래는 테스트용으로 생성한 계정이다. 그 밑에 두개는 기본으로 생성되는 관리자 계정이다. 관리자계정와 자신이 사용할 계정의 읽기/쓰기 권한을 부여하고 저장한다.</p>\n\n<p>여기까지 문제없이 성공했다면 이제 파일을 저장할 폴더가 만들어졌고 이를 저장할 수 있는 권한이 있는 계정까지 만들어졌다. 하지만 우리는 이 폴더에 접근할 수 없는데 이는 우리가 다른 컴퓨터에서 라즈베리파이 내부에 존재하는 해당 폴더에 접근할 방법이 없기 때문이다. 물론 SSH와 같은 방법이 있기는 하나, 대용량이거나 많은 개수의 파일을 폴더에 저장하거나 폴더에서 꺼내기에 적합한 방식이 아니다.</p>\n\n<h2 id=\"4-ftp-smb설정\">4. FTP, SMB설정</h2>\n\n<p>가장 편리한 방법으로 FTP와 SMB를 들 수 있는데 여기서는 이 둘만 다루기로 한다.<img loading=\"lazy\" class=\"alignnone size-full wp-image-66\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.01.21.png\" alt=\"\" width=\"1030\" height=\"802\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.01.21.png 1030w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.01.21-300x234.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.01.21-1024x797.png 1024w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.01.21-768x598.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>사이드바에서 FTP를 선택한다. 특별한 보안상 위험을 걱정하지 않는다면 필자와 같은 세팅을 해도 무방하다고 본다. 높은 보안 수준을 걱정해야 할 파일이라면 이런 곳에 저장하지 않거나 이미 이 설정에 대한 이해가 충분할 것이다. 보안보다는 연결의 수월함이 중요한 필자는 위 사진처럼 설정을 하였다. 이후 공유탭을 선택한다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-67\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.04.29.png\" alt=\"\" width=\"399\" height=\"243\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.04.29.png 399w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.04.29-300x183.png 300w\" sizes=\"(max-width: 399px) 85vw, 399px\" /></p>\n\n<p>필자의 두 공유폴더가 보인다. 처음 설정하는 사람이라면 여기에 공유폴더가 보이지 않을 것이다. 추가를 누르자.<img loading=\"lazy\" class=\"alignnone size-full wp-image-68\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.05.37.png\" alt=\"\" width=\"504\" height=\"431\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.05.37.png 504w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.05.37-300x257.png 300w\" sizes=\"(max-width: 504px) 85vw, 504px\" /></p>\n\n<p>공유 폴더를 선택하고 저장하자.</p>\n\n<p>여기까지 완료했다면 이제 공유폴더에 FTP로 접근할 수 있게 된 것이다. Filezilla와 같은 FTP파일 전송 프로그램을 이용하여 폴더에 접근해보자.</p>\n\n<p>이제 SMB를 설정하기 위해 사이드바에서 SMB를 선택하자.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-69\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.09.29.png\" alt=\"\" width=\"911\" height=\"779\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.09.29.png 911w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.09.29-300x257.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.09.29-768x657.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>활성화 버튼 외에는 건드릴 것이 없다. 활성화 시켜주고 저장하자. 그리고 공유탭으로 들어간다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-70\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.10.29.png\" alt=\"\" width=\"857\" height=\"365\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.10.29.png 857w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.10.29-300x128.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.10.29-768x327.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>필자의 공유폴더 두 개가 보인다. 처음 설정한다면 아무것도 보이지 않을 것이다. 추가를 눌러 공유폴더를 추가하자.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-71\" src=\"http://altair823.hopto.org/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.11.21.png\" alt=\"\" width=\"869\" height=\"510\" srcset=\"https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.11.21.png 869w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.11.21-300x176.png 300w, https://altair823.com/wp-content/uploads/2021/02/스크린샷-2021-02-27-오전-10.11.21-768x451.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>공유폴더를 선택하고 필요한 설정을 체크한다. 필자는 맥 타임머신을 이용하기 위해 타임머신 지원을 체크하였다. 일반적인 NAS용도라면 딱히 건드릴 설정이 없을 것이다.</p>\n\n<p>여기까지 모든 설정을 완료했다면 FTP와 SMB를 사용하여 공유폴더에 접근가능할 것이다.</p>\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"godzilla\" data-enlighter-linenumbers=\"false\">ftp://***.***.*.*\nsmb://***.***.*.*</pre>  \n\n<p>이런 형식으로 해당 서버에 접근 가능할 것이다.</p>\n\n<p> </p>\n","dir":"/post/raspberrypi/","name":"2021-02-27-madeNAS.md","path":"post/raspberrypi/2021-02-27-madeNAS.md","url":"/post/raspberrypi/2021-02-27-madeNAS.html"},{"sort":2,"permalink":"/post/raspberrypi/","layout":"default","title":"라즈베리파이","content":"<h1 id=\"라즈베리파이\">라즈베리파이</h1>\n\n<ul>\n <li><a href=\"/post/raspberrypi/2021-02-27-first.html\">라즈베리파이에 관한 이야기</a></li>\n <li><a href=\"/post/raspberrypi/2021-02-27-madeNAS.html\">라즈베리파이에 OMV로 NAS만들기</a></li>\n <li><a href=\"/post/raspberrypi/2021-03-02-transmission_error.html\">트랜스미션 “Permission denied…” 오류 해결하기</a></li>\n <li><a href=\"/post/raspberrypi/2021-03-02-OMV(1).html\">OMV를 사용하며 겪었던 시행착오들 (1)</a></li>\n <li><a href=\"/post/raspberrypi/2021-03-02-OMV(2).html\">OMV를 사용하며 겪었던 시행착오들 (2)</a></li>\n</ul>\n","dir":"/post/raspberrypi/","name":"README.md","path":"post/raspberrypi/README.md","url":"/post/raspberrypi/"},{"sort":3,"title":"트랜스미션 &#8220;Permission denied&#8230;&#8221; 오류 해결하기","date":"2021-03-02 16:00:59 +0900","author":"altair823","categories":["라즈베리파이"],"layout":"default","content":"<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-137\" src=\"https://altair823.com/wp-content/uploads/2021/03/21702F3C56D18F960C.png\" alt=\"\" width=\"624\" height=\"315\" srcset=\"https://altair823.com/wp-content/uploads/2021/03/21702F3C56D18F960C.png 624w, https://altair823.com/wp-content/uploads/2021/03/21702F3C56D18F960C-300x151.png 300w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" /></p>\n\n<p>정리하다면 “Permission” 오류는 토렌트로 받은 파일을 저장할 공간의 권한 문제로 발생하는 오류라는 것이다. 다운로드 할 목적지 폴더와 트랜스미션의 사용자를 맞춰주면 된다. 모든 권한을 열고 트랜스미션의 유저 이름을 root로 하는 것도 방법이지만 블로그 서버도 돌아가는 라즈베리파이의 보안을 신경쓰지 않을 수 없다. 따라서 폴더의 소유자와 그 권한을 바꾸는 작업을 했다.</p>\n\n<h3 id=\"권한의-이해\">권한의 이해</h3>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-136\" src=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오후-3.19.31.png\" alt=\"\" width=\"277\" height=\"196\" /></p>\n\n<p>ssh로 접속하여 ls -al로 확인한 전체 폴더들의 권한들이다. 맨 앞의 d는 디렉터리, 즉 폴더라는 뜻이다. 그 뒤로 나타나는 r, w, x는 각각 read, write, execute, 그러니까 읽기권한, 쓰기권한, 실행권한이라는 뜻이다. d (단일 파일이라면 -)이후의 부분은 세 개씩 잘라 읽으면 되는데, 앞에서부터 [소유자의 권한][그룹의 권한][그 외 사용자의 권한]을 뜻한다.</p>\n\n<p>또한 s와 t는 특수권한을 뜻하는데, 소유자 권한에 붙으면 해당 파일의 접근 권한을 다른 사용자가 잠시 빌려올 수 있도록 허용하는 것이다. 그룹 권한에 붙으면 역시 파일의 접근 권한을 그룹에서 다른 사용자가 잠시 빌려올 수 있다. 이 두 경우 x대신 s가 들어가게 된다. 그 외의 사용자 권한에 특수권한이 붙으면 x대신 t가 붙게 되며 이는 파일의 생성은 누구나 가능하지만 삭제는 생성한 사람과 소유자만 가능하게 하는 옵션이다.</p>\n\n<p>따라서 위에 보이는 문자들을 해석해보면</p>\n\n<p>d rwx rws r-x :</p>\n\n<ol>\n <li>이는 폴더이며,</li>\n <li>소유자(root)에게 모든 권한을 주고 있고,</li>\n <li> 해당 그룹(user)에게 역시 모든 권한을 주고 있으며,</li>\n <li>다른 사용자들은 읽기와 실행만 가능하다.</li>\n <li>하지만 소유 그룹의 파일을 실행해야 할 경우 해당 그룹의 권한을 빌려 다른 사람이 실행할 수 있다.</li>\n</ol>\n\n<h3 id=\"해결\">해결</h3>\n\n<p>권한의 종류들을 알았으니 이제 폴더의 권한을 바꿔줄때다. chmod로 파일의 권한을, chown으로 소유자과 그룹을 바꿀 수 있다. 먼저 트랜스미션을 정지한다.</p>\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"godzilla\" data-enlighter-linenumbers=\"false\">sudo service transmission-daemon stop</pre>  \n\n<p>트랜스미션의 유저 이름은 debian-transmission이다. 따라서</p>\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"godzilla\" data-enlighter-linenumbers=\"false\">sudo chown -R Debian-transmission (토렌트 파일을 저장할 폴더명, 또는 경로)/</pre>  \n\n<p>를 입력해 소유자를 바꾸면 된다. 여기서 옵션으로 준 -R은 하위 폴더와 파일들의 권한까지 일괄적으로 변경하는 옵션이다. 만약 이렇게 했는데도 권한오류가 발생한다면</p>\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"godzilla\" data-enlighter-linenumbers=\"false\">sudo chmod -R 777 (토렌트 파일을 저장할 폴더명, 또는 경로)/</pre>  \n\n<p>를 입력해 권한을 바꿔주면 된다. 이렇게 하면 소유자나 소유 그룹 뿐만 아니라 다른 사용자도 폴더에 접근해 쓰기를 할 수 있다. 이제 트랜스미션을 다시 실행한다.</p>\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"godzilla\" data-enlighter-linenumbers=\"false\">sudo service transmission-daemon start</pre>  \n\n<p>다시 토렌트 파일들을 넣어 확인해보면 정상적으로 작동하는 것을 볼수 있을 것이다.</p>\n","dir":"/post/raspberrypi/","name":"2021-03-02-transmission_error.md","path":"post/raspberrypi/2021-03-02-transmission_error.md","url":"/post/raspberrypi/2021-03-02-transmission_error.html"},{"sort":4,"title":"OMV를 사용하며 겪었던 시행착오들 (1)","date":"2021-03-02 07:33:45 +0900","author":"altair823","categories":["NAS"],"layout":"default","content":"<h2 id=\"1-서론\">1. 서론</h2>\n\n<p>OMV는 분명 강력한 나스 운영체제다. 1기가비트 이상 속도나 무조건적인 안정성이 반드시 필요하지 않다면 라즈베리파이에 설치된 OMV는 정말로 충분하고도 남는 성능을 보여준다. 나는 그동안 나스의 저장장치로 USB스틱, HDD, SSD 모두 사용해 보았다. 저렴한 가격에 USB를 사용해 보았지만 너무나 낮은 쓰기 속도로 인해 하드디스크를 달았고, 컴퓨터를 업그레이드 하면서 나온 SSD를 라즈베리파이에 달았다. 나는 전자제품을 커스터마이징 할 때 기기가 할 수 있는 모든 기능을 다 경험해본 다음 깔끔하게 포맷하여 내가 필요한 기능만을 사용하는 것을 좋아한다. 그래서 라즈베리파이에 달릴 저장장치들을 추가할 때마다 여러번 OMV를 밀고 다시 설치하기를 반복했다.</p>\n\n<p>그러나 그때마다 정말로 다양한 문제를 마주하였다. 그리고 그런 문제의 답은 단순히 프로젝트 소개, how to do 수준의 글들에서는 찾아볼 수 없는 경우가 많았다. 얕은 지식 수준에서 스스로 해결할 수 있는 문제는 별로 없었고, 아주 작은 요류만으로도 라즈비안 전체를 포맷해야 하는 불쾌한 경험을 했다.</p>\n\n<p>그런 과정 속에서 얻은 얼마 안되는 해결책을 좀 써보려고 한다. 많은 것들을 외국 페이지들에서 배웠고 특히 OMV공식 포럼에서 많은 도움을 받았다. 맨 땅에 헤딩하며 배우는 것들도 있겠지만 가장 좋은 것은 헤딩도 하지 않고 배우는 것이라고 생각하며 겪었던 경험들을 소개한다.</p>\n\n<h2 id=\"2-시행착오들\">2. 시행착오들</h2>\n\n<h4 id=\"1-라즈베리파이-sd카드-슬롯고장\">1) 라즈베리파이 SD카드 슬롯고장</h4>\n\n<p>나는 데비안 기반 운영체제를 라즈베리파이로 처음 접했다.  sudo, apt, 그 모든게 너무나 이질적이면서도 신기했다. 프로그램을 설치하려고 온갖 사이트를 돌아다닐 필요없이 영어 몇 줄이면 알아서 필요한 프로그램을 깔아주는 터미널은 정말 충격적이었다. 라즈비안 lite버전을 깔아 GUI환경을 내 맘대로 구성하는 것은 하얀 눈에 그림그리는 어린 아이가 된 기분이었다.</p>\n\n<p>그렇게 신기한 것들을 경험하던 어느 날, 라즈베리파이가 부팅이 되지 않았다. 모니터가 하나 밖에 없었기에 주로 ssh를 통해 제어하던 나는 단지 ssh 연결 문제인줄 알았다. 하지만 모니터에 연결하여 부팅했을 때 나온 메시지는 마이크로 sd카드가 존재하지 않다는 것이었다. 항상 백업은 중요하다고 생각한다. 그래서 처음 주문할 때도 sd카드를 두 개 주문했었다. 하나는 주로 사용할 sd카드, 하나는 백업을 하거나 실험적인 테스트를 할 sd카드였다. 하지만 얼척 없게도 두 카드 모두 인식이 되지 않았다. 두 카드 모두 OMV가 설치된 라즈비안이 깔려있었다.</p>\n\n<figure id=\"attachment_100\" aria-describedby=\"caption-attachment-100\" style=\"width: 768px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" class=\"wp-image-100 size-large\" src=\"https://altair823.com/wp-content/uploads/2021/03/IMG_2298-768x1024.jpg\" alt=\"\" width=\"768\" height=\"1024\" srcset=\"https://altair823.com/wp-content/uploads/2021/03/IMG_2298-768x1024.jpg 768w, https://altair823.com/wp-content/uploads/2021/03/IMG_2298-225x300.jpg 225w, https://altair823.com/wp-content/uploads/2021/03/IMG_2298-1152x1536.jpg 1152w, https://altair823.com/wp-content/uploads/2021/03/IMG_2298-1536x2048.jpg 1536w, https://altair823.com/wp-content/uploads/2021/03/IMG_2298-1200x1600.jpg 1200w, https://altair823.com/wp-content/uploads/2021/03/IMG_2298-scaled.jpg 1920w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" /><figcaption id=\"caption-attachment-100\" class=\"wp-caption-text\">지금까지 구매한 마이크로 SD카드</figcaption></figure>\n\n<p>마이크로 sd카드는 상대적으로 불안정하고 특히 전원이 순간적으로 차단되면 안에 파일들이 깨질 수 있다는 글을 보았다. 얼핏 기억하기로는 전원이 켜져있었던 상태로 sd카드를 뽑았던 것 같았다. 그렇게 카드 고장인 줄 알고 새 카드를 주문했다. 하지만 새 카드 역시 인식이 되지 않았다. 그제서야 sd카드 리더기로 컴퓨터에 연결해 보았더니 모두 인식이 정상적으로 되는 것이었다. 하나의 남은 가능성은 라즈베리파이의 sd카드 슬롯의 고장이었다.</p>\n\n<p>파이를 어떻게 부팅해야할까 고민하던 찰나, usb에 os를 설치하여 라즈베리파이를 부팅할 수 있다는 말을 들었던 기억이 났다. 천만다행히도 주기적인 업데이트 과정에서 라즈베리파이의 부트로더가 업데이트 되어있었다. 내 라즈베리파이는 그때부터 지금까지 마이크로 sd카드보다 더 안정적이고 유연한 usb를 통해 부팅한다.</p>\n\n<p>만약 지금 다시 라즈베리파이를 산다면 특별한 이유가 아니면 개인적으로는 절대 마이크로sd카드를 사용하지 않을 것 같다.  usb, 특히 3.0규격으로 연결한 장치에 os를 설치하면 더욱 안정적이고 빠른 속도를 경험할 수 있다. 임베디드나 IoT같은 용도로 라즈베리파이를 사용하면 마이크로 sd카드의 작은 크기가 분명히 필요한 요소일 것이다. 하지만 나처럼 프로젝트를 여러개 올리거나, 자주 포맷을 해야할 필요가 있거나, 높은 안정성을 기대해야 할 경우에는 부트로더를 업데이트하여 usb부팅을 사용하는 것이 더 나은 방법이라고 생각한다.</p>\n\n<h4 id=\"2-이미-파일이-존재하는-하드디스크를-omv에-설치하기\">2) 이미 파일이 존재하는 하드디스크를 OMV에 설치하기</h4>\n\n<p>컴퓨터에 새 하드를 장착하면 당연하게도 특정한 형식으로 포맷하는게 좋다. 성능적인 면에서나 안정성의 면에서나 심지어 어떤 하드들은 아예 파일 시스템이 잡히지 않는다. OMV에서도 똑같다. 새로 하드를 설치하면 윈도우의 NTFS나 맥의 APFS이 아닌 EXT4나 BTRFS와 같이 리눅스에서 자주 사용하는 형식으로 하드를 포맷하는 것이 좋다.</p>\n\n<p>처음 설치했던 1테라 짜리 하드가 가득 차고 새로 4테라 짜리 하드를 구매하여 연결했다. EXT4로 포맷했고 벌써 1.3테라는 채웠을 때였다. 내가 가진 하드 도킹스테이션은 2베이이고 하드는 총 3개가 있다. 하나는 주 백업 용도, 하나는 맥의 타임머신 용도, 하나는 파일 아카이브 용도로 사용하려고 했다. 그러나 세 개의 하드를 모두 연결하지 않으면 OMV의 설정이 저장되지 않는 오류가 발생했다. (이에 대한 자세한 내용은 밑에서 더 설명한다)  그때는 이에 대한 해결책을 찾지 못했기에 os를 재설치하는 것이 가장 깔끔한 방법이라고 생각했다. 하지만 문제가 있었다. 나는 이미 총 2테가 가량되는 모든 파일을 하드디스크에 백업해둔 상태였으며, 파일들이 저장된 하드들을 다시 포맷하기에는 그 파일들을 옮겨둘 용량을 가진 저장장치가 없었다. 드롭박스나 원드라이브 같은 클라우드 서비스도 를 알아보았으나 용량이 크지 않거나 파일들을 옮기는 속도가 너무 느렸다.</p>\n\n<figure id=\"attachment_101\" aria-describedby=\"caption-attachment-101\" style=\"width: 840px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" class=\"wp-image-101 size-large\" src=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-01-오전-11.39.21-1024x682.png\" alt=\"\" width=\"840\" height=\"559\" srcset=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-01-오전-11.39.21-1024x682.png 1024w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-01-오전-11.39.21-300x200.png 300w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-01-오전-11.39.21-768x512.png 768w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-01-오전-11.39.21-1200x800.png 1200w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-01-오전-11.39.21.png 1379w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /><figcaption id=\"caption-attachment-101\" class=\"wp-caption-text\">정말 많은 정보를 얻은 OMV공식 포럼. <a href=\"https://forum.openmediavault.org\" target=\"_blank\" rel=\"noopener\">https://forum.openmediavault.org</a></figcaption></figure>\n\n<p>한국어 웹사이트에서는 이에 대한 명확한 답을 얻지 못했다. 결국 건너건너 도착한 OMV포럼에서 정확한 답을 얻을 수 있었다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-111\" src=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-01-오전-11.47.22.png\" alt=\"\" width=\"254\" height=\"440\" srcset=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-01-오전-11.47.22.png 254w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-01-오전-11.47.22-173x300.png 173w\" sizes=\"(max-width: 254px) 85vw, 254px\" /></p>\n\n<p>공식 문서에 나열된 지원되는 파일 시스템들은 포맷없이 마운트가 가능하고 사용도 가능하다. (웹 UI에서 btrfs의 스냅샷이나 서브볼륨 같은 기능은 사용 불가능하다. 내부 설정을 건드리면 일부 사용 가능하다고는 한다) (zfs는 해당 플러그인을 설치하면 이용할 수 있다) 따라서 EXT4와 같은 지원되는 파일 시스템을 가진, 지워서는 안되는 파일이 있는 장치는 OMV에 따로 포맷 걱정 없이 연결할 수 있다.</p>\n\n<p>이런 정보를 얻은 덕분에 안심하고 os를 재설치 한 뒤 안전하게 하드를 다시 이용할 수 있었다. 단지 유의해야 할 부분이라면 이용하려는 파일들을 OMV 웹 UI 에서 생성한 공유폴더 아래로 옮겨야 한다는 점이다. 아니면 가장 상위폴더 명과 생성하려는 공유폴더 명을 같게하고 경로를 해당 폴더에 잡아주면 그대로 안에 내용들에 접근 가능하다.</p>\n\n<p> </p>\n","dir":"/post/raspberrypi/","name":"2021-03-02-OMV(1).md","path":"post/raspberrypi/2021-03-02-OMV(1).md","url":"/post/raspberrypi/2021-03-02-OMV(1).html"},{"sort":5,"title":"OMV를 사용하며 겪었던 시행착오들 (2)","date":"2021-03-02 07:45:08 +0900","author":"altair823","categories":["NAS"],"layout":"default","content":"<h4 id=\"3-fail-to-execute-command-export-path--오류\">3) Fail to execute command ‘export path= …’ 오류</h4>\n\n<p>컴퓨터를 업그레이드하며 사용하지 못하는 하드가 두 개가 생겼다. 두 하드를 위해 2베이짜리 하드 도킹 스테이션을 구매했으며 거기에 모두 끼워 만족스럽게 사용하고 있었다. 하지만 1테라의 용량은 많은 파일을 백업하기에는 용량이 부족했고 결국 4테라 하드를 주문하기에 이르렀다.</p>\n\n<p>그 후 또 다른 고민에 빠지게 되는데 바로 설치할 수 있는 하드의 최대 개수는 2개인데 갖고 있는 하드는 총 3개라는 것이다. 용량이 가장 작은 500기가 하드를 놀게하려니 여간 아까운게 아니었다. 결국 제일 중요한 문서를 주기적으로 백업하는 용도로 사용하기로 마음먹게 된다. 필요할 때만, 마치 컴퓨터에 usb를 꽂듯이 하드 도킹스테이션에 바꿔끼면 될 것이라고 생각했다. 하지만 테스트하는 과정에서 다음과 같은 오류가 뿜어져 나왔다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-115\" src=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.28.32.png\" alt=\"\" width=\"487\" height=\"697\" srcset=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.28.32.png 487w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.28.32-210x300.png 210w\" sizes=\"(max-width: 487px) 85vw, 487px\" /></p>\n\n<p>하드를 처음 꽂고 파일 시스템을 인식시키면 OMV는 변경사항을 저장할거냐고 물어온다.  아무 생각없이 평소에 하던대로 적용을 누르면 잠시후 위와 같은 오류를 마주하게 된다. 전체 시스템의 재설치까지 해봤지만 오류를 고칠 수 없었다. 더군다나 웹에도 이에대한 해결방법이 딱히 찾아볼 수 없었다.</p>\n\n<p>이 오류의 발생 이유는 간단하다. 원래 있던 하드가 인식되지 않기 때문이다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-116\" src=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.44.11.png\" alt=\"\" width=\"914\" height=\"203\" srcset=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.44.11.png 914w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.44.11-300x67.png 300w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.44.11-768x171.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>altairBackup과 TimeMAChine이라는 하드 두개를 사용하고 있었다. 하지만 TimeMAChine 하드를 제거하고 Lv2backup이라는 하드를 인식시킨 모습이다. 타임머신 하드는 ftp와 smb에서 사용하고 있으니 참조도 하고 있다. 이에 대한 설정파일이 있고 오른쪽에 누락이라고 뜨고 있다. 나는 설정을 모두 마친 상황이라 Lv2backup 하드도 참조에 ‘예’라고 표시되지만 처음 인식시켰다면 ‘아니오’가 떠있을 것이다. 이 상태에서 변경사항을 저장하면 오류가 표시된다.</p>\n\n<p>이 상황에서 우리는 몇 가지 방법을 적용해볼 수 있다.</p>\n\n<h5 id=\"1--제거할-하드디스크의-공유를-모두-비활성화한-뒤-하드디스크를-제거한다\">1 – 제거할 하드디스크의 공유를 모두 비활성화한 뒤 하드디스크를 제거한다.</h5>\n\n<figure id=\"attachment_117\" aria-describedby=\"caption-attachment-117\" style=\"width: 611px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" class=\"wp-image-117 size-full\" src=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.29.00.png\" alt=\"\" width=\"611\" height=\"216\" srcset=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.29.00.png 611w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.29.00-300x106.png 300w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px\" /><figcaption id=\"caption-attachment-117\" class=\"wp-caption-text\">smb 설정에서 타임머신 하드를 비활성화 한 모습</figcaption></figure>\n\n<figure id=\"attachment_118\" aria-describedby=\"caption-attachment-118\" style=\"width: 284px\" class=\"wp-caption alignnone\"><img loading=\"lazy\" class=\"wp-image-118 size-full\" src=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.29.17.png\" alt=\"\" width=\"284\" height=\"152\" /><figcaption id=\"caption-attachment-118\" class=\"wp-caption-text\">ftp 설정에서 타임머신 하드를 비활성화 한 모습</figcaption></figure>\n\n<p>위와 같이 제거하려는 타임머신 하드의 공유를 모두 비활성화 한다. 가능하다면 공유 프로토콜 자체도 잠시 끄는게 좋다. 위와 같이 했다면 하드를 제거하고 새 하드를 꽂는다. 이후 새 하드를 마운트하고 변경사항을 적용해본다.</p>\n\n<h5 id=\"2--변경사항을-적용하지-않고-되돌리기를-선택한다\"> 2 – 변경사항을 적용하지 않고 되돌리기를 선택한다.</h5>\n\n<p>이상하게 들릴지 모르지만 간혹 변경사항을 되돌리기를 선택한 후에 모든 것이 정상적으로 작동하기도 한다. 심지어 이후 파일 시스템에 정상적으로 새 장치가 인식되어 있기도 하다. 전제 시스템이 정상적으로 잘 작동하는지 알아보는 방법은 새 공유폴더를 생성해보는 것이다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-119\" src=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.34.06.png\" alt=\"\" width=\"539\" height=\"418\" srcset=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.34.06.png 539w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-6.34.06-300x233.png 300w\" sizes=\"(max-width: 539px) 85vw, 539px\" /></p>\n\n<p>어떠한 상황에서도 위와같은 오류가 나타난다면 아직 오류가 해결되지 않은 것이다.</p>\n\n<h5 id=\"3--라즈베리파이를-재부팅-해본다\">3 – 라즈베리파이를 재부팅 해본다.</h5>\n\n<p>오류를 해결하기 위한 가장 기본적인 방법이지만 가끔 이것만으로 위와 같은 오류가 사라지는 경우가 있다. 실제로 포럼에서 위와 같은 오류를 경험한 사람들도 단지 재부팅 한 번으로 해결했다는 경험담이 있다. 정확히는 모르지만 부팅 과정에서 장치들이 자동으로 마운트 되면서 해결되는 것이 아닌가 추측해본다.</p>\n\n<h5 id=\"4--원하는-하드디스크를-제거하고-해당-설정을-모두-삭제한다\">4 – 원하는 하드디스크를 제거하고 해당 설정을 모두 삭제한다.</h5>\n\n<p>비록 귀찮지만 가장 확실한 방법이다. 나도 이 방법으로 하드를 교체하고 있다.</p>\n\n<p>새로운 하드를 설치하기 위해 제거하고 싶은 하드가 있다고 해보자. 먼저 하드를 안전하게 제거하고 ftp나 smb설정에서 해당 하드에 존재하는 공유폴더를 삭제한다. 모든 공유 프로토콜에서 공유폴더를 제거했다면 이제 공유폴더 탭으로 간다.<img loading=\"lazy\" class=\"alignnone size-full wp-image-120\" src=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-7.28.28.png\" alt=\"\" width=\"506\" height=\"143\" srcset=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-7.28.28.png 506w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-7.28.28-300x85.png 300w\" sizes=\"(max-width: 506px) 85vw, 506px\" /></p>\n\n<p>사진을 보면 참조라는 부분이 있다 이 부분이 ‘아니오’가 되지 않는다면 공유폴더가 삭제되지 않는다. 하드를 제거한 뒤, 만약 아니오가 떠있고 공유폴더를 삭제할 수 있다면 공유폴더를 삭제한다.</p>\n\n<p><img loading=\"lazy\" class=\"alignnone size-full wp-image-121\" src=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-7.30.26.png\" alt=\"\" width=\"907\" height=\"31\" srcset=\"https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-7.30.26.png 907w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-7.30.26-300x10.png 300w, https://altair823.com/wp-content/uploads/2021/03/스크린샷-2021-03-02-오전-7.30.26-768x26.png 768w\" sizes=\"(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px\" /></p>\n\n<p>이후 파일 시스템 탭에 가면 위와 같이 마운트 부분에 ‘아니오’, 참조 부분에 ‘아니오’가 있을 것이다. 이를 안전하게 삭제한다.</p>\n\n<p>이후 새 하드를 인식시키고 마운트한다. 변경사항을 적용하는 버튼을 누르면 이번에는 아무런 오류없이 변경사항이 적용될 것이다. 이제 공유폴더를 생성하고 파일을 장치에 저장할 수 있을 것이다.</p>\n\n<p> </p>\n","dir":"/post/raspberrypi/","name":"2021-03-02-OMV(2).md","path":"post/raspberrypi/2021-03-02-OMV(2).md","url":"/post/raspberrypi/2021-03-02-OMV(2).html"}]